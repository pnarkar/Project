/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.GCManagerRole;

import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.GarbageCollectionManagerOrganization;
import Business.Organization.GarbageCollectorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.GarbageCollectorWorkRequest;
import Business.WorkQueue.GarbageManagerWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pranalinarkar
 */
public class GCManagerWorkAreaJPanel extends javax.swing.JPanel {
 private JPanel userProcessContainer;
    private GarbageCollectionManagerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    /**
     * Creates new form GCManagerWorkAreaJPanel
     */
    public GCManagerWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, GarbageCollectionManagerOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        populateRequestTable();
        populateGarbageCollector();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jworkRequest = new javax.swing.JTable();
        jGC = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jAssign = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jAssign1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jworkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Area", "MetalType", "DegradableType", "PlasticType", "Status", "Receiver", "Start Date", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jworkRequest);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 780, 90));

        jGC.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jGC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGCActionPerformed(evt);
            }
        });
        add(jGC, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 66, -1));

        jLabel1.setText("Garbage Collector");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 270, -1, -1));

        jAssign.setText("Assign Priority");
        jAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAssignActionPerformed(evt);
            }
        });
        add(jAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, -1, -1));

        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 320, 101, -1));

        jAssign1.setText("Assign");
        jAssign1.setEnabled(false);
        jAssign1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAssign1ActionPerformed(evt);
            }
        });
        add(jAssign1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 370, 101, -1));

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel2.setText("Manager WorkArea ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, 31));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Iconmanager.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 50, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        populateRequestTable();
    }//GEN-LAST:event_jButton2ActionPerformed
    public void populateGarbageCollector(){
    
     Organization org=null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            System.out.println(enterprise);
            if (organization instanceof GarbageCollectorOrganization){
            
             org=organization;
             break;
            }
        }
         if (org!=null){
        jGC.removeAllItems();
        for (UserAccount ua: org.getUserAccountDirectory().getUserAccountList()){
                jGC.addItem(ua);
        }
         }   
    }
    
    
    
    
    private void jGCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGCActionPerformed
       
    }//GEN-LAST:event_jGCActionPerformed

    private void jAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAssignActionPerformed
      int selectedRow=jworkRequest.getSelectedRow();
  if(selectedRow<0){
      JOptionPane.showMessageDialog(null,"Please select a row");
      return;
  }
        
        if(userAccount!=null){
        for(WorkRequest r:userAccount.getWorkQueue().getWorkRequestList()){
     if(r.getType().equalsIgnoreCase("Suspected Item")){
     JOptionPane.showMessageDialog(null,"Please Complete this request on priority basis");
     jAssign1.setEnabled(true);
     jAssign.setEnabled(false);
     
      return;
        }}
     }
       
  
  UserAccount ua=(UserAccount) jGC.getSelectedItem();
  
   if(ua.equals("")){
      JOptionPane.showMessageDialog(null,"Please select a Garbage Collector");
      return;
  }
  String message = "sent";
   String status="Done";
    
        if(message.trim().length()==0||status.trim().length()==0){
        JOptionPane.showMessageDialog(null,"Message and status cannot be null");
        return;
        
        }
        
        
        GarbageCollectorWorkRequest gcwk= new GarbageCollectorWorkRequest();
         GarbageManagerWorkRequest gmr=(GarbageManagerWorkRequest) jworkRequest.getValueAt(selectedRow, 0);
        if(gmr.getStatus().equals("Done")){
        JOptionPane.showMessageDialog(null,"Work request already Completed");
        return;
        }
        else{
          
        gmr.setReceiver(ua);
        gmr.setStatus(status);
        gmr.setMessage(message);
        gcwk.setSender(userAccount);
        gcwk.setArea(gmr.getArea());
        gcwk.setType(gmr.getType());
        gcwk.setMessage("Received By Garbage Collector");
        gcwk.setStatus("Garbage Collector Work Area");
        gcwk.setMetalGarbageStatus(gmr.getMetalGarbageStatus());
        gcwk.setPlasticStatus(gmr.getPlasticStatus());
        gcwk.setBiodegradableStatus(gmr.getBiodegradableStatus());
        gcwk.setRequestDate(gmr.getRequestDate());
        
          
          ua.getWorkQueue().getWorkRequestList().add(gcwk);
            JOptionPane.showMessageDialog(null,"Work request added to gcwk.");
        }
             
    }//GEN-LAST:event_jAssignActionPerformed

    private void jAssign1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAssign1ActionPerformed
         int selectedRow=jworkRequest.getSelectedRow();
  if(selectedRow<0){
      JOptionPane.showMessageDialog(null,"Please select a row");
      return;
  }
  
  
  UserAccount ua=(UserAccount) jGC.getSelectedItem();
  
   if(ua.equals("")){
      JOptionPane.showMessageDialog(null,"Please select a Garbage Collector");
      return;
  }
  String message = "sent";
   String status="Done";
    
        if(message.trim().length()==0||status.trim().length()==0){
        JOptionPane.showMessageDialog(null,"Message and status cannot be null");
        return;
        
        }
        
        
        GarbageCollectorWorkRequest gcwk= new GarbageCollectorWorkRequest();
         GarbageManagerWorkRequest gmr=(GarbageManagerWorkRequest) jworkRequest.getValueAt(selectedRow, 0);
       
        
          if(gmr.getType().equalsIgnoreCase("Suspected Item")){
           gmr.setReceiver(ua);
        gmr.setStatus(status);
        gmr.setMessage(message);
        gmr.setType("Suspected");
        gcwk.setSender(userAccount);
        gcwk.setArea(gmr.getArea());
        gcwk.setType(gmr.getType());
        gcwk.setMessage("Received By Garbage Collector");
        gcwk.setStatus("Garbage Collector Work Area");
        gcwk.setMetalGarbageStatus(gmr.getMetalGarbageStatus());
        gcwk.setPlasticStatus(gmr.getPlasticStatus());
        gcwk.setBiodegradableStatus(gmr.getBiodegradableStatus());
        gcwk.setRequestDate(gmr.getRequestDate());
        
          
          ua.getWorkQueue().getWorkRequestList().add(gcwk);
            JOptionPane.showMessageDialog(null,"Work request added to gcwk.");
            jAssign1.setEnabled(false);
     jAssign.setEnabled(true);
          
          
          
       
        }
          
          else{
           JOptionPane.showMessageDialog(null,"Please Assign Suspected Type Request");
           jAssign1.setEnabled(false);
     jAssign.setEnabled(true);
          return;
          
          }
           if(gmr.getStatus().equals("Done")){
        JOptionPane.showMessageDialog(null,"Work request already Completed");
        return;
        }
             
    }//GEN-LAST:event_jAssign1ActionPerformed
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) jworkRequest.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[9];
            row[0] = request;
            String area = ((GarbageManagerWorkRequest) request).getArea();
            row[1] =  area;
            String metal = ((GarbageManagerWorkRequest) request).getMetalGarbageStatus();
            row[2] = metal;
            row[3]=((GarbageManagerWorkRequest) request).getBiodegradableStatus();
            row[4]=((GarbageManagerWorkRequest) request).getPlasticStatus();
            row[5]=((GarbageManagerWorkRequest) request).getStatus();
            row[6]=((GarbageManagerWorkRequest) request).getReceiver();
            row[7]=((GarbageManagerWorkRequest) request).getRequestDate();
            row[8]=((GarbageManagerWorkRequest) request).getType();
            
            model.addRow(row);
        }
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAssign;
    private javax.swing.JButton jAssign1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jGC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jworkRequest;
    // End of variables declaration//GEN-END:variables
}
